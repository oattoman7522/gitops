name: test-gitops

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Environment
        required: true
        default: "local"
        options:
          - local
          - dev
          - sit
          - uat
          - prd
      deploy_mode:
        type: choice
        description: Deployment Run mode
        required: true
        default: "dryrun"
        options:
          - dryrun
          - apply
      repository:
        type: choice
        description: repository
        required: true
        default: "local"
        options:
          - local
          - https://github.com/oattoman7522/gitops.git
      runner_tag:
        type: choice
        description:  Github Runner
        required: true
        default: "local"
        options:
          - local
          - wsl

env:
  Directory: "/root/gitops/gitops"

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on:
    - self-hosted
    - ${{ github.event.inputs.runner_tag }}
    steps:
    - name: Dry run test-gitops
      if: ${{ github.event.inputs.deploy_mode == 'dryrun' }}
      working-directory: ${{env.Directory}}
      run: |
        git fetch
        git pull
        helm template ${{github.event.inputs.env}}-app ./mychart/ --output-dir output/application-${{github.event.inputs.env}}/
        cat output/application-${{github.event.inputs.env}}/mychart/templates/deployment.yaml
        cat output/application-${{github.event.inputs.env}}/mychart/templates/service.yaml
        cat output/application-${{github.event.inputs.env}}/mychart/templates/configmap.yaml
        cat output/application-${{github.event.inputs.env}}/mychart/templates/namespace.yaml

    - name: Apply test-gitops
      if: ${{ github.event.inputs.deploy_mode == 'apply' }}
      working-directory: ${{env.Directory}}
      run: |
        helm template ${{github.event.inputs.env}}-app ./mychart/ --output-dir output/application-${{github.event.inputs.env}}/
        cat output/application-${{github.event.inputs.env}}/mychart/templates/deployment.yaml
        cat output/application-${{github.event.inputs.env}}/mychart/templates/service.yaml
        cat output/application-${{github.event.inputs.env}}/mychart/templates/configmap.yaml
        cat output/application-${{github.event.inputs.env}}/mychart/templates/namespace.yaml
        git fetch
        git add .
        git commit -m "update version env-${{github.event.inputs.env}}"
        git push origin implement

    # - name: Apply Deploy gitops
    #   if: ${{ github.event.inputs.deploy_mode == 'apply' }}
    #   run: |
    #     argocd app create ${{github.event.inputs.env}}-app --repo ${{github.event.inputs.repository}} --path output/mychart/templates/ --dest-namespace ${{github.event.inputs.env}}-ns --dest-server https://kubernetes.default.svc
    #     argocd app sync ${{github.event.inputs.env}}-app
    # name: deploy
    # runs-on: [localhost]
    # environment: ${{ github.event.inputs.env }}
    # steps:
    #   - name: Checkout Helm Repository
    #     uses: test-few
    #     with:
    #       repository: gitops/mychart
    #       ref: main
    #       token: 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
    #       path: ./mychart

    #   - name: "Dry run Build Template and Deploy"
    #     if: ${{ github.event.inputs.deploy_mode == 'dryrun' }}
    #     run: |
    #       helm template ${{github.event.inputs.env}} ./mychart/ --output-dir output/ --debug
          
    #       cat output/mychart/template/deployment.yaml
    #       cat output/mychart/template/service.yaml
    #       cat output/mychart/template/configmap.yaml
